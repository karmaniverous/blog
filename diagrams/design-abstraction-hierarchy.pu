@startuml design-abstraction-hierarchy

allowmixing

top to bottom direction

skinparam componentStyle rectangle

component "**__High-Level Design__**\n\n//Business Requirements://\n* //Entities//\n* //Processes//\n* //Relationships//" as high #LightCyan
note left of high
  **Design artifacts** relating 
  **business requirements** to...
  * other business requirements.
  * technical abstractions.
end note
high <|- high
note on link #AliceBlue
    One design artifact may 
    spawn others at higher 
    levels of detail.
end note

component "**__Low-Level Design__**\n\n//Technical Abstractions://\n* //API design//\n* //UX wireframe//\n* //DevOps process//" as low #Cyan
note left of low
**Design artifacts** relating 
**technical abstractions** to...
* other technical abstractions.
* technical artifacts & implementations.
end note
low <|- low
note on link #AliceBlue
    Identify useful abstractions 
    and shared functionality as 
    additional design targets.
end note

component "**__Implementation__**\n\n//Technical Artifacts://\n* //Code libraries//\n* //Config docs//\n* //Automation//" as implementation #LightSkyBlue
note left of implementation
  **Technical artifacts** that...
  * **directly** implement technical abstractions.
  * **indirectly** implement business requirements.
end note
implementation <|- implementation
note on link #AliceBlue
    Realize low-level design 
    abstractions as classes, 
    components & libraries.
end note

high <|-- low
low <|-- implementation

@enduml